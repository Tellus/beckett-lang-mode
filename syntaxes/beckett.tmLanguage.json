{
	"$schema": "https://raw.githubusercontent.com/Tellus/tmlanguage/master/tmlanguage.json",
	"name": "Beckett",
	"patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#preprocess-directives"
    },
    {
      "include": "#cast-list"
    },
    {
			"include": "#preposition"
		},
    {
      "include": "#stage-directions"
    },
    {
      "include": "#dialogue"
    },
		{
			"include": "#strings"
		},
    {
      "include": "#time-period"
    }
	],
	"repository": {
    "stage-directions": {
      "patterns": [
        {
          "include": "#stage-light"
        },
        {
          "include": "#stage-direction"
        },
        {
          "include": "#cue-direction"
        }
      ]
    },
    "preposition": {
      "patterns": [{
        "match": "\\b(on|at|in|beside)[^\\S\\r\\n]the\\b",
        "name": "keyword"
      }]
    },
    "cast-list": {
      "begin": "(Cast):",
      "captures": {
        "1": {
          "name": "keyword"
        }
      },
      "while": "^[ \\t]+(?<character>[_[:alnum:]]+)(?:[ \\t]+(?<preposition>(?:in|on|at|beside)[ \\t]+the))(?<location>(?:[ \\t]+[_[:alnum:]]+)+)$",
      "whileCaptures": {
        "1": {
          "name": "entity.name.class"
        },
        "2": {
          "patterns": [{"include": "#preposition"}]
        },
        "3": {
          "name": "variable"
        }
      }
    },
    "preprocess-directives": {
      "patterns": [
        {
          "match": "(?i)(scene|location):((?:[ \\t]+(?:[_$[:alnum:]]+))+)$",
          "captures": {
            "1": {
              "name": "keyword"
            },
            "2": {
              "name": "variable"
            }
          }
        }
      ]
    },
    "cue-direction": {
      "patterns": [
        {
          "match": "(?i)^(cue)\\b(.+)$",
          "captures": {
            "1": {
              "name": "keyword"
            },
            "2": {
              "name": "entity.name.class"
            }
          }
        }
      ]
    },
    "stage-direction": {
      "patterns": [
        {
          "match": "^(?i)(meanwhile),?",
          "captures": {
            "1": {
              "name": "keyword"
            }
          }
        },
        {
          "match": "^(?i)(?:meanwhile,?[ \\t]+)?(?-i)(?<actor>[_[:alnum:]]+)[ \\t]+(?<verb>[_[:alnum:]]+)(?:(?:to|at|beside)the(?<location>))?(?:for|in|over)[ \\t]+(?<duration>\\d+)[ \\t]+(seconds?|minutes?|hours?)",
          "captures": {
            "1": {
              "name": "actor"
            },
            "2": {
              "name": "verb"
            },
            "3": {
              "name": "location"
            }
          }
        }
      ]
    },
    "stage-light": {
      "patterns": [{
        "match": "(?i)^[ \\t]*(fade)[ \\t]+(in|out)$",
        "name": "keyword"
      }]
    },
    "dialogue": {
      "patterns": [{
        "match": "^([_[:alnum:]]+)(?:\\((.+)\\))?:(.+)",
        "captures": {
          "1": {
            "name": "entity.name.class"
          },
          "2": {
            "name": "entity.name.function"
          },
          "3": {
            "name": "string"
          }
        }
      }]
    },
    "time-period": {
      "patterns": [
        {
          "match": "\\b(?<preposition>for|in|over)[ \\t]+(?<time_amount>\\d)+(?<time_unit>seconds|minutes|hours)\\b",
          "name": "comment.line",
          "captures": {
            "1": {
              "patterns": [{ "include": "#preposition"}]
            },
            "2": {
              "name": "constant.numeric"
            },
            "3": {
              "name": "variable.parameter"
            }
          }
        }
      ]
    },
    "time-unit": {
      "patterns": [{
        "name": "keyword",
        "match": "\\bseconds?|minutes?|hours?\\b"
      }]
    },
    "comments": {
      "patterns": [
        {
          "include": "#inline-comment"
        },
        {
          "include": "#multiline-comment"
        }
      ]
    },
    "inline-comment": {
      "patterns": [{
        "name": "comment.line",
        "match": "^(#|//|%).+$"
      }]
    },
    "multiline-comment": {
      "begin": "\\/\\*",
      "end": "\\*\\/",
      "name": "comment",
      "patterns": [
        {
          "include": "#multiline-comment"
        }
      ]
    },
		"strings": {
			"name": "string.quoted.double.beckett",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.beckett",
					"match": "\\\\."
				}
			]
		}
	},
	"scopeName": "source.beckett"
}